PRAGMA foreign_keys = ON;
delete from tag_map;
delete from items;
delete from tags;
delete from item_events;
delete from updates;
vacuum;

insert into tags (id, tag_name, created_at) values (1, "food", datetime());
insert into tags (id, tag_name, created_at) values (2, "database", datetime());
insert into tags (id, tag_name, created_at) values (3, "blog", datetime());
insert into tags (id, tag_name, created_at) values (4, "haskell", datetime());
insert into tags (id, tag_name, created_at) values (5, "interesting", datetime());
insert into tags (id, tag_name, created_at) values (6, "expenses", datetime());
insert into tags (id, tag_name, created_at) values (7, "computers", datetime());

-- Start putting the todo items in the database.
insert into items (id, description, priority, created_at) values (1, "Make a chicken sandwich.", 1, datetime());
insert into tag_map (item_id, tag_id, created_at) values (1, 1, datetime());

insert into items (id, description, priority, created_at) values (2, "Learn how to use HDBC.", 2, datetime());
insert into tag_map (item_id, tag_id, created_at) values (2, 2, datetime());
insert into tag_map (item_id, tag_id, created_at) values (2, 4, datetime());
insert into tag_map (item_id, tag_id, created_at) values (2, 5, datetime());
insert into tag_map (item_id, tag_id, created_at) values (2, 7, datetime());

insert into items (id, description, priority, created_at) values (3, "Write a blog post.", 3, datetime());
insert into tag_map (item_id, tag_id, created_at) values (3, 5, datetime());
insert into tag_map (item_id, tag_id, created_at) values (3, 7, datetime());
insert into tag_map (item_id, tag_id, created_at) values (3, 3, datetime());

-- Create children for id 1
insert into items (id, description, priority, created_at, parent_id) 
   values (4, "Buy some chicken.", 1, datetime(), 1);
insert into tag_map (item_id, tag_id, created_at) values (4, 1, datetime());
insert into tag_map (item_id, tag_id, created_at) values (4, 6, datetime());

insert into items (id, description, priority, created_at, parent_id) 
   values (5, "Buy some bread.", 6, datetime(), 1);
insert into tag_map (item_id, tag_id, created_at) values (5, 1, datetime());
insert into tag_map (item_id, tag_id, created_at) values (5, 6, datetime());

-- Create children for id 2
insert into items (id, description, priority, created_at, parent_id) 
   values (6, "Figure out how all of the different databases hook in.", 3, datetime(), 2);
insert into tag_map (item_id, tag_id, created_at) values (6, 2, datetime());
insert into tag_map (item_id, tag_id, created_at) values (6, 5, datetime());
insert into tag_map (item_id, tag_id, created_at) values (6, 7, datetime());

insert into items (id, description, priority, created_at, parent_id) 
   values (7, "Write a program that makes use of the library for the greater good.", 3, datetime(), 2);
insert into tag_map (item_id, tag_id, created_at) values (7, 4, datetime());
insert into tag_map (item_id, tag_id, created_at) values (7, 5, datetime());
insert into tag_map (item_id, tag_id, created_at) values (7, 7, datetime());

-- Create children for id 3
insert into items (id, description, priority, created_at, parent_id) 
   values (8, "Write a Haskell blog post.", 4, datetime(), 3);
insert into tag_map (item_id, tag_id, created_at) values (8, 3, datetime());
insert into tag_map (item_id, tag_id, created_at) values (8, 4, datetime());
insert into tag_map (item_id, tag_id, created_at) values (8, 5, datetime());
insert into tag_map (item_id, tag_id, created_at) values (8, 7, datetime());

insert into items (id, description, priority, created_at, parent_id) 
   values (9, "Write a blog post that gets people talking.", 1, datetime(), 3);
insert into tag_map (item_id, tag_id, created_at) values (9, 3, datetime());
insert into tag_map (item_id, tag_id, created_at) values (9, 5, datetime());
